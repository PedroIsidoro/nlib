if (!window.PDoc) window.PDoc = {};
PDoc.elements = {
  'Settings': { 'name': 'Settings', 'type': 'class', 'path': 'Settings/index.html' },
'new Settings': { 'name': 'new Settings', 'type': 'constructor', 'path': 'Settings/new/index.html' },
'Settings#get': { 'name': 'Settings#get', 'type': 'instance method', 'path': 'Settings/prototype/get/index.html' },
'Settings#store': { 'name': 'Settings#store', 'type': 'instance method', 'path': 'Settings/prototype/store/index.html' },
'Settings#definition': { 'name': 'Settings#definition', 'type': 'instance method', 'path': 'Settings/prototype/definition/index.html' },
'Permission.Test': { 'name': 'Permission.Test', 'type': 'class', 'path': 'Permission/Test/index.html' },
'new Permission.Test': { 'name': 'new Permission.Test', 'type': 'constructor', 'path': 'Permission/Test/new/index.html' },
'Permission.Test#and': { 'name': 'Permission.Test#and', 'type': 'instance method', 'path': 'Permission/Test/prototype/and/index.html' },
'Permission.Test#or': { 'name': 'Permission.Test#or', 'type': 'instance method', 'path': 'Permission/Test/prototype/or/index.html' },
'Permission.Test#call': { 'name': 'Permission.Test#call', 'type': 'instance method', 'path': 'Permission/Test/prototype/call/index.html' },
'Permission': { 'name': 'Permission', 'type': 'class', 'path': 'Permission/index.html' },
'new Permission': { 'name': 'new Permission', 'type': 'constructor', 'path': 'Permission/new/index.html' },
'Permission#filter': { 'name': 'Permission#filter', 'type': 'instance property', 'path': 'Permission/prototype/filter/index.html' },
'Permission#addTest': { 'name': 'Permission#addTest', 'type': 'instance method', 'path': 'Permission/prototype/addTest/index.html' },
'Permission#test': { 'name': 'Permission#test', 'type': 'instance method', 'path': 'Permission/prototype/test/index.html' },
'Permission#or': { 'name': 'Permission#or', 'type': 'instance method', 'path': 'Permission/prototype/or/index.html' },
'Settings.Store': { 'name': 'Settings.Store', 'type': 'class', 'path': 'Settings/Store/index.html' },
'new Settings.Store': { 'name': 'new Settings.Store', 'type': 'constructor', 'path': 'Settings/Store/new/index.html' },
'Settings.Store#get': { 'name': 'Settings.Store#get', 'type': 'instance method', 'path': 'Settings/Store/prototype/get/index.html' },
'Settings.Store#set': { 'name': 'Settings.Store#set', 'type': 'instance method', 'path': 'Settings/Store/prototype/set/index.html' },
'Settings.Store#preload': { 'name': 'Settings.Store#preload', 'type': 'instance method', 'path': 'Settings/Store/prototype/preload/index.html' },
'Settings.Store#keys': { 'name': 'Settings.Store#keys', 'type': 'instance property', 'path': 'Settings/Store/prototype/keys/index.html' },
'Settings.Store#getDefaultsFor': { 'name': 'Settings.Store#getDefaultsFor', 'type': 'instance method', 'path': 'Settings/Store/prototype/getDefaultsFor/index.html' },
'Settings.Store.adopts': { 'name': 'Settings.Store.adopts', 'type': 'class method', 'path': 'Settings/Store/adopts/index.html' },
'Utilities': { 'name': 'Utilities', 'type': 'class', 'path': 'Utilities/index.html' },
'Utilities.readYaml': { 'name': 'Utilities.readYaml', 'type': 'class method', 'path': 'Utilities/readYaml/index.html' },
'Utilities.mergeBuffers': { 'name': 'Utilities.mergeBuffers', 'type': 'class method', 'path': 'Utilities/mergeBuffers/index.html' },
'Utilities.patchBuffers': { 'name': 'Utilities.patchBuffers', 'type': 'class method', 'path': 'Utilities/patchBuffers/index.html' },
'HooksManager': { 'name': 'HooksManager', 'type': 'class', 'path': 'HooksManager/index.html' },
'new HooksManager': { 'name': 'new HooksManager', 'type': 'constructor', 'path': 'HooksManager/new/index.html' },
'HooksManager#getStack': { 'name': 'HooksManager#getStack', 'type': 'instance method', 'path': 'HooksManager/prototype/getStack/index.html' },
'HooksManager#add': { 'name': 'HooksManager#add', 'type': 'instance method', 'path': 'HooksManager/prototype/add/index.html' },
'HooksManager#exec': { 'name': 'HooksManager#exec', 'type': 'instance method', 'path': 'HooksManager/prototype/exec/index.html' },
'ActionController': { 'name': 'ActionController', 'type': 'class', 'path': 'ActionController/index.html' },
'new ActionController': { 'name': 'new ActionController', 'type': 'constructor', 'path': 'ActionController/new/index.html' },
'ActionController#permission': { 'name': 'ActionController#permission', 'type': 'instance method', 'path': 'ActionController/prototype/permission/index.html' },
'PriorityStack': { 'name': 'PriorityStack', 'type': 'class', 'path': 'PriorityStack/index.html' },
'new PriorityStack': { 'name': 'new PriorityStack', 'type': 'constructor', 'path': 'PriorityStack/new/index.html' },
'PriorityStack#push': { 'name': 'PriorityStack#push', 'type': 'instance method', 'path': 'PriorityStack/prototype/push/index.html' },
'PriorityStack#flatten': { 'name': 'PriorityStack#flatten', 'type': 'instance method', 'path': 'PriorityStack/prototype/flatten/index.html' },
'Application': { 'name': 'Application', 'type': 'class', 'path': 'Application/index.html' },
'new Application': { 'name': 'new Application', 'type': 'constructor', 'path': 'Application/new/index.html' },
'Application#dirname': { 'name': 'Application#dirname', 'type': 'instance property', 'path': 'Application/prototype/dirname/index.html' },
'Application#name': { 'name': 'Application#name', 'type': 'instance property', 'path': 'Application/prototype/name/index.html' },
'Application#config': { 'name': 'Application#config', 'type': 'instance property', 'path': 'Application/prototype/config/index.html' },
'Application#bootstrap': { 'name': 'Application#bootstrap', 'type': 'instance method', 'path': 'Application/prototype/bootstrap/index.html' },
'Application#env': { 'name': 'Application#env', 'type': 'instance property', 'path': 'Application/prototype/env/index.html' },
'Application#init': { 'name': 'Application#init', 'type': 'instance method', 'path': 'Application/prototype/init/index.html' },
'Application#getConfigFilename': { 'name': 'Application#getConfigFilename', 'type': 'instance method', 'path': 'Application/prototype/getConfigFilename/index.html' },
'Application#readConfig': { 'name': 'Application#readConfig', 'type': 'instance method', 'path': 'Application/prototype/readConfig/index.html' },
'Application#getModel': { 'name': 'Application#getModel', 'type': 'instance method', 'path': 'Application/prototype/getModel/index.html' },
'Application#settings': { 'name': 'Application#settings', 'type': 'instance property', 'path': 'Application/prototype/settings/index.html' },
'Application.addHook': { 'name': 'Application.addHook', 'type': 'class method', 'path': 'Application/addHook/index.html' }
};